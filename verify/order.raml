#%RAML 0.8
title: supermarket-production-manage-api
mediaType: application/json

/productions:
  get:
    description: As a customer I can get all the productions then I can get productions to buy
    responses:
      200:
        body:
          application/json:
            schema: |
              {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "totalCount": {
                  "type": "integer",
                  "required": true
                },
                "productions": {
                  "type": "array",
                  "productions": {
                    "type": "object",
                    "properties": {
                      "price": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "categoryUri": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "categoryId": {
                        "type": "integer"
                      },
                      "required": ["price", "name", "categoryUri", "id", "categoryId"]
                    }
                  }
                }
              }
            example: |
              {
                "totalCount": 1,
                "productions": [ {
                  "price": 10,
                  "categoryUri": "categories/2",
                  "name": "apple",
                  "id": 1,
                  "categoryId": 2
                }]
              }

  post:
    description: As a admin I can create a production so that customer can buy the production
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "price": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "categoryId": {
                "type": "integer"
               }
            },
            "required": ["price", "name", "categoryId"]
          }
        example: |
          {
            "price": 10,
            "name": "apple",
            "categoryId": 2
          }
    responses:
      201:
        body:
          application/json:
            schema: |
              {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "properties": {
                  "productionUri": {
                    "type": "string",
                    "required": true
                  }
                }
              }
            example: |
              {
                "productionUri": "productions/10"
              }

  /{id}:
    get:
      description: As a customer I can view the production detail so that I can decide whether to buy the production or not.
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "required": true,
                  "properties": {
                    "price": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "categoryUri": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "categoryId": {
                      "type": "integer"
                     }
                  },
                  "required": ["price", "name", "categoryUri", "id", "categoryId"]
                }
              example: |
                {
                  "price": 10,
                  "categoryUri": "categories/2",
                  "name": "apple",
                  "id": 1,
                  "categoryId": 2
                }

    delete:
      description: As a admin I can delete a production so that customer won't see outdated production
      responses:
        204:

    put:
      description: As a admin I can update a production so that customer can see the newer production details
      body:
        application/json:
          schema: |
            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "required": true,
              "properties": {
                "price": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "categoryId": {
                  "type": "integer"
                 }
              },
              "required": ["price", "name", "categoryUri", "id", "categoryId"]
            }
          example: |
            {
              "price": 10,
              "name": "apple",
              "categoryId": 2
            }
      responses:
        204:

/categories:
  get:
    description: As a customer I can get all the categories then I can quickly view all categories to decide what productions to buy
    responses:
      200:
        body:
          application/json:
            schema: |
              {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "type": "object",
                "required": true,
                "totalCount": {
                  "type": "integer"
                },
                "productions": {
                  "type": "array",
                  "productions": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "categoryId": {
                        "type": "integer"
                       }
                    },
                    "required": ["name", "id", "categoryId"]
                  }
                }
              }
            example: |
              {
                "totalCount": 4,
                "productions": [
                  {
                    "categoryUri": "categories/1",
                    "name": "all",
                    "id": 1
                  },
                  {
                    "categoryUri": "categories/2",
                    "name": "fruits",
                    "id": 2
                  },
                  {
                    "categoryUri": "categories/3",
                    "name": "tools",
                    "id": 3
                  },
                  {
                    "categoryUri": "categories/4",
                    "name": "milks",
                    "id": 4
                  }
                ]
              }

  post:
    description: As a admin I can create a category so that customer can get new category
    body:
      application/json:
        schema: |
          {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "required": true
              }
            }
          }
        example: |
          {
            "name": "xxxx"
          }
    responses:
      201:
        body:
          application/json:
           schema: |
             {
               "$schema": "http://json-schema.org/draft-04/schema#",
               "type": "object",
               "properties": {
                 "categoryUri": {
                   "type": "string",
                   "required": true
                 }
               }
             }
           example: |
             {
               "categoryUri": "xxxx"
             }
  /{id}:
    get:
      description: As a customer I can view the category details
      responses:
        200:
          body:
            application/json:
              schema: |
                {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                    "categoryUri": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                     },
                    "required": ["name", "categoryUri", "id"]
                  }
                }
              example: |
                {
                  "categoryUri": "categories/2",
                  "name": "apple",
                  "id": 2
                }
    delete:
      description: As a admin I can delete a category so that customer won't see outdated category
      responses:
        204:
          description: 删除成功
        412:
          description: 删除失败，该分类下还有商品，不能删除
          body:
            application/json:
              schema: |
                {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "properties": {
                    "meaasge": {
                      "type": "string",
                      "required": true
                    }
                   }
                 }
              example: |
                {
                  "meaasge": "该分类下还有商品，不能删除"
                }
    put:
      description: As a admin I can update a category details so that customer will see newer category details
      body:
        application/json:
          schema: |
            {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "required": true
                }
               }
             }
          example: |
            {
              "name": "watermelon"
            }
      responses:
        204:

